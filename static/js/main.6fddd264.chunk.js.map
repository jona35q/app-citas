{"version":3,"sources":["componentes/Error.js","componentes/pregunta.js","componentes/Formulario.js","componentes/Gasto.js","componentes/Listado.js","helpers.js","componentes/ControlPresupuesto.js","App.js","serviceWorker.js","index.js"],"names":["Error","mensaje","className","Pregunta","props","guardarPresupuesto","guardarPreguntaPresupuesto","guardarRestante","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombreGasto","guardarNombreGasto","cantidadGasto","guardarCantidadGasto","gasto","id","shortid","generate","Gasto","Listado","gastos","map","key","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","preguntaPresupuesto","crearGasto","guardarGastos","useEffect","listadoGastos","presupuestoRestante","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6fddd264.chunk.js","sourcesContent":["import React from 'react';\n\nconst Error = ({mensaje}) => {\n    return(\n        <p className=\"alert alert-danger error\">{mensaje}</p>\n    )\n}\n\nexport default Error;","import React, { Fragment, useState } from 'react';\nimport Error from './Error';\n\nfunction Pregunta(props){\n\n    const {guardarPresupuesto, guardarPreguntaPresupuesto, guardarRestante} = props;\n\n    // definir el state\n    const [ cantidad, guardarCantidad ] = useState(0);\n    const [ error, guardarError ] = useState(false);\n\n    // validar el presupuesto\n    const agregarPresupuesto = e => {\n        e.preventDefault();\n\n        // validar\n        if(cantidad < 1 || isNaN(cantidad)){\n            guardarError(true);\n            return;\n        }\n\n        // Si se pasa la validacion\n        guardarError(false);\n        guardarPresupuesto(cantidad);\n        guardarRestante(cantidad);\n        guardarPreguntaPresupuesto(false);\n    }\n\n    return(\n        <Fragment>\n            <h2>Coloca tu Presupuesto</h2>\n\n            {error ? <Error mensaje=\"El presupuesto es incorrecto\" /> : null}\n\n            <form onSubmit={agregarPresupuesto}>\n                <input \n                    type=\"number\"\n                    className=\"u-full-width\"\n                    placeholder=\"Agregar tu Presupuesto\"\n                    onChange={e => guardarCantidad(parseInt(e.target.value, 10))}\n                />\n                <input type=\"submit\" className=\"button-primary u-full-width\" value=\"Definir presupuesto\" />\n            </form>\n        </Fragment>\n    )\n}\n\nexport default Pregunta;","import React, { useState } from 'react';\nimport Error from './Error';\nimport shortid from 'shortid';\n\nfunction Formulario(props){\n\n    const {guardarGasto, guardarCrearGasto} = props;\n\n    // state\n    const [nombreGasto, guardarNombreGasto] = useState('');\n    const [cantidadGasto, guardarCantidadGasto] = useState(0);\n    const [error, guardarError] = useState(false);\n\n    // Cuando se agrega el gasto\n    const agregarGasto = e => {\n        e.preventDefault();\n\n        // validar\n        if(cantidadGasto < 1 || isNaN(cantidadGasto) || nombreGasto === ''){\n            guardarError(true);\n            return;\n        }\n\n        // creando el objeto de gasto\n        const gasto = {\n            nombreGasto,\n            cantidadGasto,\n            id: shortid.generate()\n        }\n\n        // pasar el gasto al componente principal\n        guardarGasto(gasto);\n        guardarCrearGasto(true);\n        // eliminar la alerta de error\n        guardarError(false);\n\n        // resetear el form\n        guardarNombreGasto('');\n        guardarCantidadGasto('');\n    }\n\n    return(\n        <form\n            onSubmit={agregarGasto}\n        >\n            <h2>Agrega tus Gastos Aqu√≠</h2>\n\n            {error ? <Error mensaje=\"Ambos campos son obligatorios o presupuesto incorrecto\" /> : null}\n\n            <div className=\"campo\">\n                <label>Nombre Gasto</label>\n                <input \n                    type=\"text\"\n                    className=\"u-full-width\"\n                    placeholder=\"Ej. Transporte\"\n                    onChange={e => guardarNombreGasto(e.target.value)}\n                    value={nombreGasto}\n                />\n            </div>\n\n            <div className=\"campo\">\n                <label>Cantidad Gasto</label>\n                <input \n                    type=\"number\"\n                    className=\"u-full-width\"\n                    placeholder=\"Ej. 300\"\n                    onChange={e => guardarCantidadGasto(parseInt(e.target.value,10))}\n                    value={cantidadGasto}\n                />\n            </div>\n\n            <input type=\"submit\" className=\"button-primary u-full-width\" value=\"Agregar Gasto\" />\n        </form>\n    )\n}\n\nexport default Formulario;","import React from 'react';\n\nconst Gasto = ({gasto}) => (\n    <li className=\"gastos\">\n        <p>\n            {gasto.nombreGasto}\n            <span className=\"gasto\">${gasto.cantidadGasto}</span>\n        </p>\n    </li>\n)\n\nexport default Gasto;","import React from 'react';\nimport Gasto from './Gasto';\n\nfunction Listado({gastos}){\n    return(\n        <div className=\"gastos-realizados\">\n            <h2>Listado</h2>\n            {gastos.map(gasto => (\n                <Gasto\n                    key={gasto.id}\n                    gasto={gasto}\n                />\n            ))}\n        </div>\n    )\n}\n\nexport default Listado;","export const revisarPresupuesto = (presupuesto,restante) => {\n    let clase;\n    // Comprobar el 25% \n    if( (presupuesto / 4) > restante) {\n         clase = 'alert alert-danger';\n    } else if( (presupuesto / 2) > restante) {\n        clase = 'alert alert-warning'\n    } else {\n        clase = 'alert alert-success';\n    }\n    return clase;\n} ","import React, {Fragment} from 'react';\nimport {revisarPresupuesto} from '../helpers';\n\nconst ControlPresupuesto = ({presupuesto, restante}) => (\n\n        <Fragment>\n            <div className=\"alert alert-primary\">\n                Presupuesto: ${presupuesto}\n            </div>\n            <div className={revisarPresupuesto(presupuesto,restante)}>\n                Restante: ${restante}\n            </div>\n        </Fragment>\n)\n\nexport default ControlPresupuesto;","import React, { useState, useEffect } from 'react';\nimport Pregunta from './componentes/pregunta';\nimport Formulario from './componentes/Formulario';\nimport Listado from './componentes/Listado';\nimport ControlPresupuesto from './componentes/ControlPresupuesto';\n\nfunction App() {\n\n  // state\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  const [restante, guardarRestante] = useState(0)\n  const [preguntaPresupuesto, guardarPreguntaPresupuesto] = useState(true);\n  const [crearGasto, guardarCrearGasto] = useState(false);\n  const [gasto, guardarGasto] = useState({});\n  const [gastos, guardarGastos] = useState([]);\n\n  useEffect(() => {\n    if(crearGasto){\n      const listadoGastos = [...gastos, gasto];\n      guardarGastos(listadoGastos);\n\n      // restar el presupuesto\n      const presupuestoRestante = restante - gasto.cantidadGasto;\n      guardarRestante(presupuestoRestante);\n\n      // una vez que se agrega lo ponemos como false\n      guardarCrearGasto(false);\n    }\n  }, [crearGasto, gastos, gasto, restante]);\n\n  return (\n    <div className=\"App container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n\n        <div className=\"contenido-principal contenido\">\n          { (preguntaPresupuesto)\n            ?\n              <Pregunta \n              guardarPresupuesto={guardarPresupuesto}\n              guardarPreguntaPresupuesto={guardarPreguntaPresupuesto}\n              guardarRestante={guardarRestante}\n              />\n            : (\n              <div className=\"row\">\n                <div className=\"one-half column\">\n                  <Formulario \n                    guardarGasto={guardarGasto}\n                    guardarCrearGasto={guardarCrearGasto}\n                  />\n                </div>\n\n                <div className=\"one-half column\">\n                  <Listado \n                    gastos={gastos}\n                  />\n                  <ControlPresupuesto \n                    presupuesto={presupuesto}\n                    restante={restante}\n                  />\n                </div>\n              </div>\n            )\n          }\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}